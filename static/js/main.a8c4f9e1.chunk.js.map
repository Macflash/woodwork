{"version":3,"sources":["renderHelper.ts","threetest.ts","board.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["renderer","renderApp","actionMode","GetMode","SetMode","mode","controls","enabled","camera","scene","THREE","lines","addLine","line","push","Origin","Vector3","boards","pendingBoard","getPendingBoard","setPendingBoard","board","drawToScene","getNewBoardName","length","getBoards","getBoardByName","name","find","b","Board","width","height","origin","pending","hovered","selected","vertices","this","createVerts","forEach","v","subVectors","addVectors","updateGeometry","verts","map","add","points","getLinePoints","geometry","setFromPoints","material","color","updateColor","visible","getPoints","getLines","dotGeometry","dotMaterial","size","sizeAttenuation","angle","console","log","undefined","Math","PI","applyAxisAngle","twoByFour","twoByFour2","rotateY","twoByFour3","window","innerWidth","innerHeight","position","set","lookAt","antialias","setSize","document","body","appendChild","domElement","OrbitControls","enableDamping","xAxis","yAxis","zAxis","addLineToScene","hovergeometry","hovermaterial","sphereInter","ptInter","mouse","lastMouse","mouseDown","oncontextmenu","e","preventDefault","stopPropagation","addEventListener","button","intersects","raycaster","intersectObjects","object","unselect","select","rotateX","setOrigin","point","fix","key","rotateZ","event","x","y","clientX","clientY","aspect","updateProjectionMatrix","labelAxes","axis","id","label","vector","copy","project","z","el","getElementById","createElement","style","innerText","top","left","params","Line","threshold","Points","animate","requestAnimationFrame","update","unhover","setFromCamera","hover","renderLineHover","show","hide","renderLinePoint","render","setupThreeScene","App","React","useState","setState","rerender","useCallback","random","useEffect","border","buttonStyle","cursor","textAlign","display","justifyContent","alignItems","margin","backgroundColor","enabledButtonStyle","className","fontFamily","fontSize","right","bottom","padding","onClick","onMouseEnter","onMouseLeave","flexDirection","filter","Boolean","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a8c4f9e1.chunk.js","sourcesContent":["var renderer: ()=>void = ()=>{};\r\n\r\nexport function registerAppRender(render: ()=>void){\r\n    renderer = render;\r\n}\r\n\r\nexport function renderApp(){\r\n    renderer();\r\n}","import * as THREE from 'three';\r\nimport { Vector2, Vector3 } from 'three';\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { getBoardByName, getBoards, getPendingBoard, setPendingBoard } from './board';\r\nimport { renderApp } from './renderHelper';\r\n\r\ntype ActionMode = \"MOVE\" | \"SELECT\" | \"ADD\";\r\n\r\nvar actionMode: ActionMode = \"MOVE\";\r\n\r\nexport function GetMode() {\r\n    return actionMode;\r\n}\r\n\r\nexport function SetMode(mode: ActionMode) {\r\n    if (actionMode === mode) { return; }\r\n\r\n    actionMode = mode;\r\n    if (actionMode === \"MOVE\") {\r\n        controls.enabled = true;\r\n    }\r\n    else {\r\n        controls.enabled = false;\r\n    }\r\n\r\n    renderApp();\r\n}\r\n\r\nvar scene = new THREE.Scene();\r\nvar lines: THREE.Line[] = [];\r\nvar points: THREE.Points[] = [];\r\nvar scale = 10;\r\n\r\nexport function getScale() { return scale; }\r\nexport function getScene() { return scene; }\r\n\r\nexport function addLine(line: THREE.Line) {\r\n    lines.push(line);\r\n}\r\nexport function addPoints(pt: THREE.Points) {\r\n    points.push(pt);\r\n}\r\n\r\nvar camera: THREE.PerspectiveCamera;\r\nvar controls: OrbitControls;\r\n\r\nexport function getControlsState() {\r\n    return controls.enabled;\r\n}\r\n\r\nexport function setControls(enabled: boolean) {\r\n    controls.enabled = enabled;\r\n}\r\n\r\nexport function setupThreeScene() {\r\n    camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 500);\r\n    camera.position.set(25, 50, 100);\r\n    camera.lookAt(25, 25, 25);\r\n    var renderer = new THREE.WebGLRenderer({ antialias: true });\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    document.body.appendChild(renderer.domElement);\r\n\r\n    controls = new OrbitControls(camera, renderer.domElement);\r\n    controls.enableDamping = true;\r\n\r\n    const origin = new Vector3(0, 0, 0);\r\n    const axisScale = 10;\r\n    const xAxis = new Vector3(axisScale, 0, 0);\r\n    const yAxis = new Vector3(0, axisScale, 0);\r\n    const zAxis = new Vector3(0, 0, axisScale);\r\n\r\n    function addLineToScene(points: Vector3[], color = 0xFFFFFF) {\r\n        var geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n        var material = new THREE.LineBasicMaterial({ color });\r\n        var line = new THREE.Line(geometry, material);\r\n        scene.add(line);\r\n    }\r\n\r\n    function initOrigin() {\r\n        addLineToScene([origin, xAxis], 0xFF0000);\r\n        addLineToScene([origin, yAxis], 0x00FF00);\r\n        addLineToScene([origin, zAxis], 0x0000FF);\r\n    }\r\n\r\n    initOrigin();\r\n\r\n    //var geometry = new THREE.BoxGeometry();\r\n    //var material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\r\n    //var cube = new THREE.Mesh( geometry, material );\r\n    //scene.add( cube );\r\n    //    camera.position.z = 5;\r\n\r\n\r\n    // Interaction stuff for lines\r\n    var hovergeometry = new THREE.SphereBufferGeometry(.5);\r\n    var hovermaterial = new THREE.MeshBasicMaterial({ color: 0xFFFFFF });\r\n    const sphereInter = new THREE.Mesh(hovergeometry, hovermaterial);\r\n    sphereInter.visible = false;\r\n    scene.add(sphereInter);\r\n\r\n    var hovergeometry = new THREE.SphereBufferGeometry(1);\r\n    var hovermaterial = new THREE.MeshBasicMaterial({ color: 0xff0000 });\r\n    const ptInter = new THREE.Mesh(hovergeometry, hovermaterial);\r\n    ptInter.visible = false;\r\n    scene.add(ptInter);\r\n\r\n    const mouse = new THREE.Vector2();\r\n    const lastMouse = new THREE.Vector2();\r\n\r\n    let mouseDown = false;\r\n\r\n    document.oncontextmenu = e => {\r\n        if(actionMode===\"ADD\"){\r\n\r\n            e.preventDefault?.();\r\n            e.stopPropagation?.();\r\n            return false;\r\n        }\r\n    };\r\n\r\n    document.addEventListener('mousedown', e => {\r\n        console.log(\"click!\",e);\r\n        if (!mouseDown && actionMode === \"SELECT\") {\r\n            if(e.button === 2) { return; }\r\n            var intersects = raycaster.intersectObjects(lines, true);\r\n\r\n            if (intersects.length > 0) {\r\n                const board = getBoardByName(intersects[0].object.name);\r\n                if (board) {\r\n                    console.log(\"Selected! \", board);\r\n                    if (board.selected) {\r\n                        board.unselect();\r\n                    }\r\n                    else {\r\n                        board.select();\r\n                    }\r\n                    renderApp();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!mouseDown && actionMode === \"ADD\" && getPendingBoard()) {\r\n            if(e.button === 2) { \r\n                // rotate the item somehow...\r\n\r\n                getPendingBoard()!.rotateX().setOrigin(getPendingBoard()!.origin);\r\n\r\n                return;\r\n             }\r\n             else {\r\n                var intersects = raycaster.intersectObjects(lines, true);\r\n\r\n                if (intersects.length > 0) {\r\n                    getPendingBoard()?.setOrigin(intersects[0].point);\r\n                    const newBoard = getPendingBoard()!;\r\n                    newBoard.fix();\r\n                    setPendingBoard(null);\r\n                    renderApp();\r\n                }\r\n             }\r\n        }\r\n\r\n        mouseDown = true;\r\n    });\r\n\r\n    document.addEventListener('keydown', e => {\r\n        if(actionMode === \"ADD\"){\r\n            const pendingBoard = getPendingBoard();\r\n            if(pendingBoard){\r\n                switch (e.key){\r\n                    case \"a\":\r\n                    pendingBoard.rotateY();\r\n                    break;\r\n                    case \"d\":\r\n                    pendingBoard.rotateY(Math.PI / -2);\r\n                    break;\r\n                    \r\n                    case \"s\":\r\n                    pendingBoard.rotateX();\r\n                    break;\r\n                    case \"w\":\r\n                    pendingBoard.rotateX(Math.PI / -2);\r\n                    break;\r\n                    \r\n                    case \"q\":\r\n                    pendingBoard.rotateZ();\r\n                    break;\r\n                    case \"e\":\r\n                    pendingBoard.rotateZ(Math.PI / -2);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (e.key === \"m\" || e.key === \"Escape\") {\r\n            SetMode(\"MOVE\");\r\n        }\r\n        if (e.key === \"s\") {\r\n        //    SetMode(\"SELECT\");\r\n        }\r\n        if (e.key === \"a\") {\r\n         //   SetMode(\"ADD\");\r\n        }\r\n    });\r\n\r\n    document.addEventListener('mouseup', e => {\r\n        mouseDown = false;\r\n    });\r\n\r\n    document.addEventListener('mousemove', (event) => {\r\n        lastMouse.x = mouse.x;\r\n        lastMouse.y = mouse.y;\r\n        // track mouse location\r\n        event.preventDefault();\r\n        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\r\n        mouse.y = - (event.clientY / window.innerHeight) * 2 + 1;\r\n    }, false);\r\n\r\n    window.addEventListener('resize', () => {\r\n        camera.aspect = window.innerWidth / window.innerHeight;\r\n        camera.updateProjectionMatrix();\r\n        renderer.setSize(window.innerWidth, window.innerHeight);\r\n    }, false);\r\n\r\n    const raycaster = new THREE.Raycaster()!;\r\n    raycaster.params.Line!.threshold = 2;\r\n    raycaster.params.Points!.threshold = .5;\r\n\r\n    function renderLinePoint() {\r\n        if (actionMode !== \"ADD\") { return; }\r\n        getBoards().forEach(b => b.unhover());\r\n        raycaster.setFromCamera(mouse, camera);\r\n\r\n        var intersects = raycaster.intersectObjects(lines, true);\r\n\r\n        if (intersects.length > 0) {\r\n            sphereInter.visible = true;\r\n            sphereInter.position.copy(intersects[0].point);\r\n\r\n            const board = getBoardByName(intersects[0].object.name);\r\n            if (board) {\r\n                board.hover();\r\n            }\r\n\r\n            const pendingBoard = getPendingBoard();\r\n            if (pendingBoard) {\r\n            getPendingBoard()?.show();\r\n            pendingBoard.setOrigin(intersects[0].point);\r\n            }\r\n\r\n        } else {\r\n            sphereInter.visible = false;\r\n            getPendingBoard()?.hide();\r\n        }\r\n    }\r\n\r\n    function renderLineHover() {\r\n        if (actionMode !== \"SELECT\") { return; }\r\n        getBoards().forEach(b => b.unhover());\r\n\r\n        // find intersections\r\n        raycaster.setFromCamera(mouse, camera);\r\n        var intersects = raycaster.intersectObjects(lines, true);\r\n        if (intersects.length > 0) {\r\n            const board = getBoardByName(intersects[0].object.name);\r\n            if (board) {\r\n                board.hover();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function labelAxes(axis: Vector3, id: string, label: string, color: string) {\r\n        const vector = new Vector3().copy(axis).project(camera);\r\n        vector.x = (vector.x + 1) * window.innerWidth / 2;\r\n        vector.y = - (vector.y - 1) * window.innerHeight / 2;\r\n        vector.z = 0;\r\n\r\n        let el = document.getElementById(id);\r\n        if (!el) {\r\n            el = document.createElement(\"div\");\r\n            el.id = id;\r\n            el.style.position = \"absolute\";\r\n            document.body.appendChild(el);\r\n            el.style.color = color;\r\n        }\r\n\r\n        el.innerText = label;\r\n        el.style.top = vector.y + \"px\";\r\n        el.style.left = vector.x + \"px\";\r\n    }\r\n\r\n    // Finally render the scene!\r\n    function animate() {\r\n        requestAnimationFrame(animate);\r\n        controls.update();\r\n        renderLineHover();\r\n        renderLinePoint();\r\n\r\n        labelAxes(xAxis, \"xaxis\", \"X\", \"red\");\r\n        labelAxes(yAxis, \"yaxis\", \"Y\", \"green\");\r\n        labelAxes(zAxis, \"zaxis\", \"Z\", \"blue\");\r\n\r\n        renderer.render(scene, camera);\r\n\r\n    }\r\n\r\n    animate();\r\n}\r\n","import { addLine, getScene, getScale, addPoints } from \"./threetest\";\r\nimport * as THREE from 'three';\r\nimport { Vector3 } from \"three\";\r\n\r\nconst Origin = new Vector3();\r\n\r\nconst boards: Board[] = [];\r\n\r\nvar pendingBoard: Board | null = null;\r\n\r\nexport function getPendingBoard() {\r\n    return pendingBoard;\r\n}\r\n\r\nexport function setPendingBoard(board: Board|null) {\r\n    pendingBoard = board;\r\n    pendingBoard?.drawToScene();\r\n}\r\n\r\nfunction getNewBoardName() {\r\n    return `Board-${boards.length}`;\r\n}\r\n\r\nexport function getSelectionLength() {\r\n    return getBoards().filter(b => b.selected).length;\r\n}\r\n\r\nexport function clearSelection() {\r\n    getBoards().forEach(b => b.unselect());\r\n}\r\n\r\nexport function getBoards() {\r\n    return boards;\r\n}\r\n\r\nexport function getBoardByName(name: string) {\r\n    return boards.find(b => b.name === name);\r\n}\r\n\r\nexport class Board {\r\n    readonly name = getNewBoardName();\r\n    private line: THREE.Line | null = null;\r\n\r\n    public hovered = false;\r\n    public selected = false;\r\n\r\n    public vertices: Vector3[] = this.createVerts();\r\n\r\n    constructor(public width: number, public height: number, public length: number, public origin: Vector3 = Origin, private pending = false) {\r\n        boards.push(this);\r\n    }\r\n\r\n    setOrigin(origin: Vector3) {\r\n        this.vertices.forEach(v => v.subVectors(v, this.origin));\r\n        this.origin = origin;\r\n        this.vertices.forEach(v => v.addVectors(v, this.origin));\r\n        this.updateGeometry();\r\n    }\r\n\r\n    private createVerts() {\r\n        const verts: Vector3[] = [];\r\n\r\n        // front face\r\n        verts.push(new Vector3(0, 0, 0));\r\n        verts.push(new Vector3(this.width, 0, 0));\r\n        verts.push(new Vector3(this.width, this.height, 0));\r\n        verts.push(new Vector3(0, this.height, 0));\r\n\r\n        verts.push(new Vector3(0, 0, this.length));\r\n        verts.push(new Vector3(0, this.height, this.length));\r\n        verts.push(new Vector3(this.width, this.height, this.length));\r\n        verts.push(new Vector3(this.width, 0, this.length));\r\n\r\n        return verts.map(v => v.add(this.origin));\r\n    }\r\n\r\n    updateGeometry(){\r\n        var points = this.getLinePoints();\r\n        this.line!.geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n    }\r\n\r\n    updateColor() {\r\n        if (this.pending) { this.line!.material = new THREE.LineBasicMaterial({ color: 0xFFFF00 }); }\r\n        else if (this.selected) { this.line!.material = new THREE.LineBasicMaterial({ color: 0xFF0066 }); }\r\n        else if (this.hovered) { this.line!.material = new THREE.LineBasicMaterial({ color: 0x00FFFF }); }\r\n        else { this.line!.material = new THREE.LineBasicMaterial({ color: 0x00FF66 }); }\r\n    }\r\n\r\n    select() {\r\n        this.selected = true;\r\n        this.updateColor();\r\n    }\r\n\r\n    unselect() {\r\n        this.selected = false;\r\n        this.updateColor();\r\n    }\r\n\r\n    hover() {\r\n        this.hovered = true;\r\n        this.updateColor();\r\n    }\r\n\r\n    unhover() {\r\n        this.hovered = false;\r\n        this.updateColor();\r\n    }\r\n\r\n    fix(){\r\n        this.pending = false;\r\n        addLine(this.line!); // how can we remove these later?? Just remove all and re-add from boards??\r\n        return this;\r\n    }\r\n\r\n    hide(){\r\n        this.line!.visible = false;\r\n    }\r\n\r\n    show(){\r\n        this.line!.visible = true;\r\n    }\r\n\r\n    drawToScene() {\r\n        const scene = getScene();\r\n\r\n        const points = this.getPoints();\r\n        //scene.add(points);\r\n        //addPoints(points);\r\n\r\n        const line = this.getLines();\r\n        scene.add(line);\r\n        if(!this.pending){\r\n            addLine(line);\r\n        }\r\n        //addLine(line);\r\n\r\n        function animate() {\r\n            requestAnimationFrame(animate);\r\n            //line.rotateZ(.005);\r\n            //line.rotateY(.001);\r\n        }\r\n        //animate();\r\n        this.updateColor();\r\n        return this;\r\n    }\r\n\r\n    getPoints() {\r\n        var dotGeometry = new THREE.Geometry();\r\n        dotGeometry.vertices.push(this.vertices[0]);\r\n        dotGeometry.vertices.push(this.vertices[1]);\r\n        dotGeometry.vertices.push(this.vertices[2]);\r\n        dotGeometry.vertices.push(this.vertices[3]);\r\n        dotGeometry.vertices.push(this.vertices[4]);\r\n        dotGeometry.vertices.push(this.vertices[5]);\r\n        dotGeometry.vertices.push(this.vertices[6]);\r\n        dotGeometry.vertices.push(this.vertices[7]);\r\n        var dotMaterial = new THREE.PointsMaterial({ size: 2, sizeAttenuation: false });\r\n        var dots = new THREE.Points(dotGeometry, dotMaterial);\r\n        return dots;\r\n    }\r\n\r\n    getLinePoints() {\r\n        var points = [];\r\n        points.push(this.vertices[0]);\r\n        points.push(this.vertices[4]);\r\n\r\n        points.push(this.vertices[5]);\r\n        points.push(this.vertices[3]);\r\n\r\n        points.push(this.vertices[0]);\r\n        points.push(this.vertices[1]);\r\n        points.push(this.vertices[7]);\r\n        points.push(this.vertices[4]);\r\n        points.push(this.vertices[7]);\r\n        points.push(this.vertices[6]);\r\n        points.push(this.vertices[5]);\r\n        points.push(this.vertices[6]);\r\n\r\n        points.push(this.vertices[2]);\r\n        points.push(this.vertices[1]);\r\n        points.push(this.vertices[2]);\r\n        points.push(this.vertices[3]);\r\n        return points;\r\n    }\r\n\r\n    getLines() {\r\n        var points = this.getLinePoints();\r\n        var geometry = new THREE.BufferGeometry().setFromPoints(points);\r\n        var material = new THREE.LineBasicMaterial({ color: 0x00FF66 });\r\n        var line = new THREE.Line(geometry, material);\r\n        line.name = this.name;\r\n        this.line = line;\r\n        return line;\r\n    }\r\n\r\n    rotateX(angle?: number) {\r\n        console.log(\"angle\", angle);\r\n        angle = angle === undefined ? (Math.PI / 2) : angle;\r\n        console.log(\"used angle\", angle);\r\n        this.vertices.forEach(v => v.subVectors(v, this.origin).applyAxisAngle(new Vector3(1, 0, 0), angle === undefined ? (Math.PI / 2) : angle).addVectors(v, this.origin));\r\n        return this;\r\n    }\r\n\r\n    rotateY(angle?: number) {\r\n        this.vertices.forEach(v => v.subVectors(v, this.origin).applyAxisAngle(new Vector3(0, 1, 0), angle === undefined ? (Math.PI / 2) : angle).addVectors(v, this.origin));\r\n        return this;\r\n    }\r\n\r\n    rotateZ(angle?: number) {\r\n        this.vertices.forEach(v => v.subVectors(v, this.origin).applyAxisAngle(new Vector3(0, 0, 1), angle === undefined ? (Math.PI / 2) : angle).addVectors(v, this.origin));\r\n        return this;\r\n    }\r\n}","import React, { useCallback } from 'react';\nimport './App.css';\nimport { Board, clearSelection, getBoards, getPendingBoard, getSelectionLength, setPendingBoard } from './board';\nimport { Vector3 } from 'three';\nimport { getControlsState, GetMode, SetMode, setupThreeScene } from './threetest';\nimport { registerAppRender } from './renderHelper';\n\n\nconst twoByFour = new Board(2, 4, 48, new Vector3(-12, 0, -15));\nconst twoByFour2 = new Board(2, 4, 24, twoByFour.vertices[1]).rotateY();\nconst twoByFour3 = new Board(2, 4, 48, twoByFour2.vertices[4]);\nsetupThreeScene();\ntwoByFour.drawToScene().fix();\ntwoByFour2.drawToScene().fix();\ntwoByFour3.drawToScene().fix();\n\nfunction App() {\n  const [_, setState] = React.useState(0);\n\n\n  const rerender = useCallback(() => {\n    setState(Math.random());\n  }, [setState]);\n\n  React.useEffect(() => {\n    registerAppRender(rerender);\n  }, [rerender]);\n\n  const color = \"#00FF88\";\n  const border = `1px solid ${color}`;\n\n  const buttonStyle: React.CSSProperties = {\n    cursor: \"pointer\",\n    width: 50,\n    height: 50,\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    border,\n    margin: 10,\n    backgroundColor: \"black\",\n    color,\n  };\n\n  const enabledButtonStyle: React.CSSProperties = {\n    ...buttonStyle,\n    color: \"black\",\n    backgroundColor: color,\n  };\n\n  return (\n    <div className=\"App\">\n      {\n        // <canvas id=\"canvas\" width=\"600\" height=\"600\" />\n      }\n      <div style={{\n        position: \"absolute\",\n        color,\n        top: 10,\n        left: 10,\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\n        fontSize: 32\n      }}>\n        WoodWork\n      </div>\n\n      {GetMode() === \"ADD\" ?\n\n        <div style={{\n          border,\n          position: \"absolute\",\n          color: \"#00FF88\",\n          right: 10,\n          bottom: 10,\n          fontFamily: `\"Lucida Console\", Monaco, monospace`,\n          fontSize: 12,\n          padding: 10,\n        }}>\n          Items\n        <br />\n\n          {getPendingBoard()\n            ? <button style={enabledButtonStyle} onClick={() => {\n              setPendingBoard(null);\n              rerender();\n            }}>\n              Cancel\n            </button>\n\n            : <button style={buttonStyle} onClick={() => {\n              setPendingBoard(new Board(2, 4, 12, undefined, true));\n              rerender();\n            }}>\n              2x4\n        </button>\n          }\n        </div>\n        : null}\n\n      <div style={{\n        border,\n        position: \"absolute\",\n        color: \"#00FF88\",\n        right: 10,\n        top: 10,\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\n        fontSize: 14,\n        padding: 10,\n      }}>\n        Boards\n        <br />\n\n        {getBoards().map(b => <div\n          style={{ cursor: \"pointer\", margin: 2, padding: 2, border: b.selected ? border : '1px solid black', color: b.selected ? \"#FF0066\" : (b.hovered ? \"#00FFFF\" : undefined) }}\n          onMouseEnter={() => { b.hover(); rerender(); }}\n          onMouseLeave={() => { b.unhover(); rerender(); }}\n          onClick={() => { if (b.selected) { b.unselect() } else { b.select(); } rerender(); console.log(\"clicked\", b); }}\n        >{b.name}\n        </div>\n        )}\n\n      </div>\n\n      <div style={{\n        border,\n        position: \"absolute\",\n        color: \"#00FF88\",\n        left: 10,\n        bottom: 10,\n        fontFamily: `\"Lucida Console\", Monaco, monospace`,\n        fontSize: 12,\n        padding: 10,\n      }}>\n        Actions\n        <br />\n\n        <div style={{ display: \"flex\", flexDirection: 'row' }}>\n          <button style={GetMode() === \"MOVE\" ? enabledButtonStyle : buttonStyle} onClick={() => {\n            SetMode(\"MOVE\");\n            rerender();\n          }}>\n            Move\n          </button>\n\n          <button style={GetMode() === \"SELECT\" ? enabledButtonStyle : buttonStyle} onClick={() => {\n            SetMode(\"SELECT\");\n            rerender();\n          }}>\n            Select\n          </button>\n\n          <button style={GetMode() === \"ADD\" ? enabledButtonStyle : buttonStyle} onClick={() => {\n            SetMode(\"ADD\");\n            rerender();\n          }}>\n            Add\n          </button>\n        </div>\n\n      </div>\n\n      {GetMode() === \"SELECT\" ?\n        <div style={{\n          border,\n          position: \"absolute\",\n          color: \"#00FF88\",\n          right: 10,\n          bottom: 10,\n          fontFamily: `\"Lucida Console\", Monaco, monospace`,\n          fontSize: 12,\n          padding: 10,\n        }}>\n          Selection\n        <br />\n\n          <div style={{ display: \"flex\", flexDirection: 'row' }}>\n            <button\n              style={getSelectionLength() > 0 ? enabledButtonStyle : buttonStyle} onClick={() => {\n                clearSelection();\n                rerender();\n              }}>\n              Clear\n          </button>\n          </div>\n\n        </div>\n        : null\n      }\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}